section_env([file_top_section,pragmas([]),paper_opts(1,afourpaper),coversec([],[],[],[],nop,nop,[]),level(0)],global_label("The Ciao Prolog system"),[string_esc("The Ciao Prolog system")],[[[],[raw_nl,[[string_esc("Ciao is a "),bf([string_esc("modern Prolog")]),string_esc(" "),string_esc("implementation that builds up from a logic-based simple kernel designed to be portable, extensible, and modular. It features:"),p([]),env_(cartouche,[string_esc(" "),env_(itemize,[string_esc(" "),item([]),href("/ciao/build/doc/ciao.html/ExtendLang.html",[bf([string_esc("constraint")])]),string_esc(" "),string_esc("logic programming and, in particular, "),href("/ciao/build/doc/ciao.html/BasicLang.html",[bf([string_esc("Prolog")])]),string_esc(", supporting the "),href("/ciao/build/doc/ciao.html/ciaointro.html#ISO-Prolog%20compliance%20and%20extensibility",[string_esc("ISO-Prolog standard")]),string_esc(", "),item([]),href("/ciao/build/doc/ciao.html/ExtendLang.html",[bf([string_esc("multiparadigm")])]),string_esc(" "),string_esc("programming (meta-programming, higher-order, concurrency, functions, etc.) "),item([]),string_esc("user "),href("/ciao/build/doc/ciao.html/packages.html",[bf([string_esc("packages")])]),string_esc(" "),string_esc("for syntactic and semantic language extensions, and interface with "),href("/ciao/build/doc/ciao.html/foreign_interface_doc.html",[bf([string_esc("foreign")])]),string_esc(" "),string_esc("code, "),item([]),href("/ciao/build/doc/ciao.html/modules.html",[bf([string_esc("modules")])]),string_esc(" "),string_esc("and "),href("/ciao/build/doc/ciao.html/bundles_doc.html",[bf([string_esc("bundles")])]),string_esc(" "),string_esc("for large scale development, and "),href("/ciao/build/doc/ciao.html/AssrtLang.html",[bf([string_esc("assertions")])]),string_esc(" "),string_esc("for unified static and dynamic verification. ")]),string_esc(" ")]),string_esc(" "),p([]),string_esc("Ciao can "),href("install.html",[bf([string_esc("install natively")])]),string_esc(" "),string_esc("in your operating system or "),href("/playground/index.html",[bf([string_esc("run in the browser")])]),string_esc(" "),string_esc("without installation."),p([]),codeblock("ciao_runnable","%! \\begin{miniplayground}
% Edit me!
% Code is loaded on the fly.
%
% Then type a query on the right,
%   ?- app(X,Y,[1,2,3]).

app([],Ys,Ys).
app([X|Xs],Ys,[X|Zs]) :-
     app(Xs,Ys,Zs).
%! \\end{miniplayground}"),string_esc("The system implements some "),bf([string_esc("advanced features")]),string_esc(" "),string_esc("such as separate and incremental compilation, global program analysis and static debugging and optimization (via source to source program transformation, "),href("/ciao/build/doc/ciaopp.html",[bf([string_esc("CiaoPP preprocessor")])]),string_esc("), a "),href("/ciao/build/doc/ciao_builder.html",[bf([string_esc("build automation")])]),string_esc(" "),string_esc("system, "),href("/ciao/build/doc/lpdoc.html",[bf([string_esc("LPdoc documentation generator")])]),string_esc(", debugger, and integrated "),href("/ciao/build/doc/ciao.html/DevEnv.html",[bf([string_esc("development environment")])]),string_esc(".")]],linebreak],[]],[component_link(install),component_link(documentation),component_link(project),component_link(playground),component_link(bundles)],section_env([unnumbered,level(1),subfile(search),is_special(search)],global_label("Search this manual"),string_esc("Search this manual"),[[raw_nl,[string_esc("Type below to search for where concepts, predicates,
 modes, properties, types, applications, authors, etc., are defined or
 referred to in this manual. Use "),tt(string_esc("_")),string_esc(" to show all entries in the index.")],linebreak],linebreak,htmlenv(input,[type="text",id="search-input"],[]),htmlenv(div,[id="search-results"],[]),htmlenv(div,[id="search-index",style="display:none"],[show_index(global)])])]).